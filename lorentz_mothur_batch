#Lorentz Mothur Batch based on Kelly Micro Eco Lab SOP based on Schloss MiSeq SOP#need the fastq files#this one uses the Trainset16_022016.rdp.tgz#Uses the Silva.nr_v132.tgzmake.file(inputdir=., type=fastq, prefix=lorentz)make.contigs(file=lorentz.files, processors=20)summary.seqs(fasta=lorentz.trim.contigs.fasta)screen.seqs(fasta=lorentz.trim.contigs.good.unique.align, count=lorentz.trim.contigs.good.count_table, summary=lorentz.trim.contigs.good.unique.summary, start=10369 ,end=25438 ,maxhomop=8,processors=18)#summary.seqs(fasta=lorentz.trim.contigs.good.unique.good.align, count=lorentz.trim.contigs.good.count_table)filter.seqs(fasta=lorentz.trim.contigs.good.unique.good.align, vertical=T, trump=.)#summary.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.fasta, count=lorentz.trim.contigs.good.count_table)unique.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.fasta, count=lorentz.trim.contigs.good.count_table)pre.cluster(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.fasta, count=lorentz.trim.contigs.good.unique.good.filter.count_table, diffs=2)chimera.vsearch(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.count_table, dereplicate=t)remove.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.fasta, accnos=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos)summary.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table)classify.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, reference=trainset16_022016.pds.fasta, taxonomy=trainset16_022016.pds.tax, cutoff=80)remove.lineage(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, taxonomy=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)count.groups(count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table)sub.sample(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, taxonomy=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, size=58826, persample=true)count.groups(count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.subsample.count_table)summary.seqs(fasta=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.subsample.fasta, count=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.subsample.count_table)#end of preprocessingrename.file(input=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.subsample.fasta, new=lorentz.final.subs.fasta)rename.file(input=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.subsample.count_table, new=lorentz.final.subs.count_table)rename.file(input=lorentz.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.subsample.taxonomy, new=lorentz.final.subs.taxonomy)summary.tax(taxonomy=lorentz.final.subs.taxonomy, count=lorentz.final.subs.count_table)cluster.split(fasta=lorentz.final.subs.fasta, count=lorentz.final.subs.count_table, taxonomy=lorentz.final.subs.taxonomy, splitmethod=classify, taxlevel=4, cutoff=0.03)classify.otu(list=lorentz.final.subs.opti_mcc.list, count=lorentz.final.subs.count_table, taxonomy=lorentz.final.subs.taxonomy, label=0.03)make.shared(list=lorentz.final.subs.opti_mcc.list, count=lorentz.final.subs.count_table, label=0.03)summary.single(shared=lorentz.final.subs.opti_mcc.shared, calc=nseqs-coverage-sobs-shannon)dist.shared(shared=lorentz.final.subs.opti_mcc.shared, calc=braycurtis-thetayc)amova(phylip=lorentz.final.subs.opti_mcc.braycurtis.0.03.lt.dist, design_lorentz=design_lorentz)metastats(shared=lorentz.final.subs.opti_mcc.shared, design_lorentz=design_lorentz)pcoa(phylip=lorentz.final.subs.opti_mcc.braycurtis.0.03.lt.dist)pcoa(phylip=lorentz.final.subs.opti_mcc.thetayc.0.03.lt.dist)nmds(phylip=lorentz.final.subs.opti_mcc.braycurtis.0.03.lt.dist)nmds(phylip=lorentz.final.subs.opti_mcc.thetayc.0.03.lt.dist)#will check upstream vs downstream.metastats(shared=lorentz.final.subs.opti_mcc.shared, design_lorentz=design_lorentz_2)